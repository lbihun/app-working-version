document.addEventListener("DOMContentLoaded", () => {
	const signalsContainer = document.getElementById("signals-list");
	const filterSelect = document.getElementById("filter");
	const refreshButton = document.getElementById("refresh");

	// –†–µ–Ω–¥–µ—Ä —Å–∏–≥–Ω–∞–ª—ñ–≤ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ñ—ñ–ª—å—Ç—Ä–∞
	function renderSignals(signals, filter) {
		signalsContainer.innerHTML = "";
		console.log("üîé –ê–∫—Ç–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä:", filter);

		const cleaned = signals.filter(s => s.direction === "BUY" || s.direction === "SELL");

const filtered = filter === "all"
	? cleaned
	: cleaned.filter(signal => signal.direction === filter);
	console.log("üßÆ –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ —Å–∏–≥–Ω–∞–ª–∏:", filtered);
	



		if (filtered.length === 0) {
			signalsContainer.textContent = "–ù–µ–º–∞—î —Å–∏–≥–Ω–∞–ª—ñ–≤ –∑–∞ –æ–±—Ä–∞–Ω–∏–º —Ñ—ñ–ª—å—Ç—Ä–æ–º";
			return;
		}

		filtered.forEach(signal => {
			const signalElement = document.createElement("div");
			signalElement.className = `signal-card ${signal.direction.toLowerCase()}`;
			signalElement.innerHTML = `
				<strong>${signal.symbol}</strong> - ${signal.direction}
				<br><strong>Take Profit:</strong> ${signal.takeProfit}
				<br><strong>Confidence:</strong> ${signal.confidence}
				${signal.expectedTime ? `<br><strong>–û—á—ñ–∫—É–≤–∞–Ω–∏–π —á–∞—Å:</strong> ${signal.expectedTime}` : ""}
			`;
			signalsContainer.appendChild(signalElement);
		});
	}

	// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤ —ñ–∑ storage
	function loadSignals() {
		chrome.storage.local.get("signals", (data) => {
			const allSignals = data.signals || [];
			console.log("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Å–∏–≥–Ω–∞–ª–∏ –≤ popup:", allSignals);
			renderSignals(allSignals, filterSelect.value);
		});
	}

	// –°–ª—É—Ö–∞—á —Ñ—ñ–ª—å—Ç—Ä—É
	filterSelect.addEventListener("change", loadSignals);

	// –ö–Ω–æ–ø–∫–∞ "–û–Ω–æ–≤–∏—Ç–∏ —Å–∏–≥–Ω–∞–ª–∏"
	refreshButton.addEventListener("click", () => {
		chrome.runtime.sendMessage({ action: "manualRefresh" }, (response) => {
			if (chrome.runtime.lastError) {
				console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≤ º—è–∑–∞—Ç–∏—Å—è –∑ background.js:", chrome.runtime.lastError.message);
				signalsContainer.textContent = "‚ùå –ù–µ–º–∞—î –∑ º—î–¥–Ω–∞–Ω–Ω—è –∑ –±–µ–∫–≥—Ä–∞—É–Ω–¥–æ–º";
				return;
			}
			console.log("‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ä—É—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:", response);
			loadSignals();
		});
		
	});

	loadSignals(); // –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ popup
});
